name: 'Get & Cache Dependencies'
description: 'Ge the dependencies (via npm) and cache them'
inputs:
   caching: #input name here is up to you
      description: "Whether to cache dependencies or not" # not up to you
      required: true # true or false
      default: true # this is used if user does not specify a different value

outputs:
   used-cache: #up to you
      description: "Whether cache was used"
      value: ${{ steps.install.outputs.cache }}

runs:
  using: 'composite' # this compulsory. avoid typos. indicates that the file is a composite action file
  steps: 
    - name: Cache dependencies
      if: inputs.caching == 'true' # you can remove the ${{}} for if conditions as usual
      id: cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      working-directory: ./06 Starting Project
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      run: |
        npm ci
        echo "cache=${{inputs.caching}}" >> $GITHUB_OUTPUT 
# just for demo purposes, we're setting the output the input value that was passed

      shell: bash # here you must add which shell to execute the "run" command 