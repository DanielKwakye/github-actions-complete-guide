name: "10 Deployment (Container)"
on: workflow_dispatch
  # push:
  #   branches:
  #     - main
  #     - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest

    # This means your job will run in this container with node environment already setup as base image for you
    # The steps in this job will NOW run in this container automatically
    # all the github actions library eg. actions/checkout@v3 will still run fine
    container: 
       image: node:16
       # env variables here are variable needed by the image NOT needed by the steps (!important)
       # you usually don't need this env here unless the docker image requires it from the documentation
      #  env: 
      #    MONGODB_CONNECTION_PROTOCOL: mongodb+srv

    # this is the env exposed to the main container
    env: 
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      # MONGODB_CLUSTER_ADDRESS: cluster0.z5elz.mongodb.net
      # MONGODB_CLUSTER_ADDRESS: mongodb # you can use the service name here directly if your job is also running in a container
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017 # if you're NOT running this job in a container, then connect to the mongo with the exposed port
      # MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      # MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      MONGODB_USERNAME: root # so this will be used to connect to the mongo db service container
      MONGODB_PASSWORD: example # same as this (to connect to mongodb service container)
      PORT: 8080

      # services belong to one job. if you need a service in another job you need to set up different services
    services:
      # service name is up to you
        mongodb:
           image: mongo # the image key is required
           ports: # this is only required if the job is not running in a container
            - 27017:27017 # exposing port 27017 to the machine. As you know from docker class, this is only required if the job is not running in a container
           env: # this mongo image requires an env key
              MONGO_INITDB_ROOT_USERNAME: root
              MONGO_INITDB_ROOT_PASSWORD: example
        # redis:

    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        working-directory: ./05 Starting Project
        run: npm ci

      - name: Run server
        working-directory: ./05 Starting Project
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      
      - name: Run tests
        working-directory: ./05 Starting Project
        run: npm test

      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
